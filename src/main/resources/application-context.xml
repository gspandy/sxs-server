<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--配置自动扫描组件-->
    <context:component-scan base-package="com.sxs.server"/>
    <!--加载配置文件-->
    <context:property-placeholder location="app-config.properties" null-value=""/>

    <!--数据源事物配置 start-->
    <bean id="xaJdbcDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init"
          destroy-method="close">
        <property name="uniqueResourceName" value="xa/xaJdbcDataSource"/>
        <property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource"/>
        <property name="xaProperties">
            <props>
                <prop key="url">${jdbc.url}</prop>
                <prop key="user">${jdbc.username}</prop>
                <prop key="password">${jdbc.password}</prop>
            </props>
        </property>
        <property name="minPoolSize" value="${jdbc.pool.minPoolSize}"/>
        <property name="maxPoolSize" value="${jdbc.pool.maxPoolSize}"/>
        <property name="borrowConnectionTimeout" value="${jdbc.pool.borrowConnectionTimeout}"/>
        <property name="testQuery" value="${jdbc.pool.testQuery}"/>
        <property name="maintenanceInterval" value="${jdbc.pool.maintenanceInterval}"/>
    </bean>
    <bean id="xaMybatisDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init"
          destroy-method="close">
        <property name="uniqueResourceName" value="xa/xaMybatisDataSource"/>
        <property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource"/>
        <property name="xaProperties">
            <props>
                <prop key="url">${jdbc.url}</prop>
                <prop key="user">${jdbc.username}</prop>
                <prop key="password">${jdbc.password}</prop>
            </props>
        </property>
        <property name="minPoolSize" value="${jdbc.pool.minPoolSize}"/>
        <property name="maxPoolSize" value="${jdbc.pool.maxPoolSize}"/>
        <property name="borrowConnectionTimeout" value="${jdbc.pool.borrowConnectionTimeout}"/>
        <property name="testQuery" value="${jdbc.pool.testQuery}"/>
        <property name="maintenanceInterval" value="${jdbc.pool.maintenanceInterval}"/>
    </bean>
    <bean id="xaJpaDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init"
          destroy-method="close">
        <property name="uniqueResourceName" value="xa/xaJpaDataSource"/>
        <property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource"/>
        <property name="xaProperties">
            <props>
                <prop key="url">${jdbc.url}</prop>
                <prop key="user">${jdbc.username}</prop>
                <prop key="password">${jdbc.password}</prop>
            </props>
        </property>
        <property name="minPoolSize" value="${jdbc.pool.minPoolSize}"/>
        <property name="maxPoolSize" value="${jdbc.pool.maxPoolSize}"/>
        <property name="borrowConnectionTimeout" value="${jdbc.pool.borrowConnectionTimeout}"/>
        <property name="testQuery" value="${jdbc.pool.testQuery}"/>
        <property name="maintenanceInterval" value="${jdbc.pool.maintenanceInterval}"/>
    </bean>
    <!--jdbc template-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="xaJdbcDataSource"/>
    </bean>
    <bean id="namedJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="xaJdbcDataSource"/>
    </bean>
    <!--mybatis 配置-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="xaMybatisDataSource"/>
        <!--默认是bean首字母小写的映射方式-->
        <property name="typeAliasesPackage" value="com.sxs.server.po"/>
        <property name="mapperLocations" value="classpath*:/mybatis/mappings/**/*.xml"/>
        <property name="configLocation" value="classpath:/mybatis-config.xml"></property>
    </bean>
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.sxs.server.dao"/>
        <!-- 扫描basePackage下所有以@MybatisDao注解的接口 -->
        <property name="annotationClass" value="com.sxs.server.annotation.MybatisDao"/>
    </bean>

    <!--atomikos事物配置 -->
    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init"
          destroy-method="close">
        <property name="forceShutdown" value="false"/>
    </bean>
    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
        <property name="transactionTimeout" value="300"/>
    </bean>
    <!--jta事物管理bean-->
    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="atomikosTransactionManager"/>
        <property name="userTransaction" ref="atomikosUserTransaction"/>
        <property name="allowCustomIsolationLevels" value="true"/>
        <property name="rollbackOnCommitFailure" value="true"/>
    </bean>
    <!--启用注解事物-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!--数据源事物配置 end-->

    <!--其他配置-->
    <bean id="zkClient" class="com.sxs.server.zookeeper.ZkClientFactoryBean" destroy-method="close"/>

    <bean id="springUtils" class="com.sxs.server.utils.SpringUtils"/>


</beans>